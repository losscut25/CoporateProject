<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bnw.beta.domain.learning.dao.TaskDAO">

    <!--교육자 숙제 관련 쿼리문//////////////////////////////////////////////////-->
    <!--숙제 생성-->
    <insert id="createTask" parameterType="TaskDTO">
        <![CDATA[
        INSERT INTO TASK (task_title, task_content, task_chapter, task_deadline, task_regdate, member_id)
        VALUES (#{task_title}, #{task_content}, #{task_chapter},#{task_deadline}, CURDATE(), #{member_id})
        ]]>
    </insert>

    <!--생성한 숙제 조회-->
    <select id="createTaskList" parameterType="map" resultType="TaskDTO">
        <![CDATA[
        SELECT * FROM task WHERE member_id = #{member_id}
        ORDER BY task_regdate DESC
        LIMIT #{page}, #{size}
        ]]>
    </select>

    <!--생성한 숙제 갯수 조회-->
    <select id="sendTaskListCount" parameterType="String" resultType="Integer">
        <![CDATA[
        SELECT COUNT(*)
        FROM task WHERE member_id = #{member_id}
        ]]>
    </select>

    <!--숙제 제목으로 조회-->
    <select id="selectTaskTitle" parameterType="String" resultType="String">
        <![CDATA[
        SELECT DISTINCT task_title
        FROM task
        WHERE member_id = #{member_id}
        AND task_deadline >= CURDATE()
        ]]>
    </select>

    <!--생성한 숙제 조회-->
    <select id="selectTaskByTitle" parameterType="map" resultType="TaskDTO">
        <![CDATA[
        SELECT * FROM task
        WHERE
        ]]>
        <if test="task_title != null and task_title != ''">
            task_title = #{task_title}
        </if>
        <if test="task_title == null or task_title == ''">
            1=1
        </if>
        <![CDATA[
        AND member_id = #{member_id}
        AND task_deadline >= CURDATE()
        ORDER BY task_regdate DESC
        LIMIT #{page}, #{size}
        ]]>
    </select>

    <!--생성한 숙제 갯수 조회-->
    <select id="countTasksByTitle" parameterType="TaskDTO" resultType="Integer">
        <![CDATA[
        SELECT COUNT(*) FROM task
        WHERE
        ]]>
        <if test="task_title != null and task_title != ''">
            task_title = #{task_title}
        </if>
        <if test="task_title == null or task_title == ''">
            1=1
        </if>
        <![CDATA[
        AND member_id = #{member_id}
        AND task_deadline >= CURDATE()
        ]]>
    </select>

    <!--그룹 이름 조회-->
    <select id="selectGroupName" parameterType="String" resultType="GroupDTO">
        <![CDATA[
        SELECT group_name, group_no FROM studygroup
        WHERE member_id = #{member_id}
        AND group_enddate >= CURDATE()
        ]]>
    </select>

    <!--그룹 이름으로 조회-->
    <select id="selectGroupByName" parameterType="GroupDTO" resultType="GroupDTO">
        <![CDATA[
        SELECT gm.member_level, m.member_name, m.member_phone, m.member_no, sg.group_no, g.game_level
        FROM groupmember AS gm
        JOIN member AS m ON gm.member_no = m.member_no
        JOIN studygroup AS sg ON gm.group_no = sg.group_no
        JOIN game AS g ON g.game_no = sg.game_no
        WHERE sg.member_id = #{member_id}
        AND gm.approve_state = '승인'
        AND sg.group_enddate >= CURDATE()
        ]]>
        <if test="group_name != null and group_name != ''">
            <![CDATA[
            AND sg.group_name LIKE #{group_name}
            ]]>
        </if>
        <if test="group_no != null and group_no != ''">
            AND sg.group_no = #{group_no}
        </if>
    </select>

    <!--숙제 전송-->
    <insert id="sendTask" parameterType="TaskDTO">
        <![CDATA[
        INSERT INTO tasksend (task_no, member_no, group_no, task_senddate, member_id)
        VALUES (#{task_no},  #{member_no}, #{group_no}, now(), #{member_id})
        ]]>
    </insert>

    <!--전송 숙제 조회-->
    <select id="selectSendTask" parameterType="map" resultType="TaskDTO">
        <![CDATA[
        SELECT tasksend_no, member_id, task_senddate, task_title, task_no,
                      task_content, task_chapter, task_deadline, group_no, group_name
        FROM (
            SELECT ts.tasksend_no, ts.member_id, ts.task_senddate, t.task_title, t.task_no,
                          t.task_content, t.task_chapter, t.task_deadline, ts.group_no, sg.group_name,
                   ROW_NUMBER() OVER (PARTITION BY t.task_no ORDER BY ts.task_senddate) AS rn
            FROM tasksend AS ts
            JOIN task AS t ON ts.task_no = t.task_no
            JOIN studygroup AS sg ON ts.group_no = sg.group_no
            WHERE ts.member_id = #{member_id} AND t.task_deadline >= CURDATE()
        ]]>
        <if test="task_title != null and task_title != ''">
            AND t.task_title = #{task_title}
        </if>
        <![CDATA[
        ) AS subquery
        WHERE rn = 1
        ORDER BY task_senddate
        ]]>
    </select>

    <!--제출된 숙제 조회-->
    <select id="evalTaskList" parameterType="map" resultType="TaskDTO">
        <![CDATA[
        SELECT sub.tasksubmit_no, sub.tasksubmit_chapter, sub.tasksubmit_content,
                      sub.tasksubmit_add, sub.tasksubmit_regdate, m.member_name, ts.member_id

        FROM tasksubmit AS sub
        JOIN member AS m ON sub.member_id = m.member_id
        JOIN tasksend AS ts ON sub.tasksend_no = ts.tasksend_no
        JOIN task AS t ON sub.task_no = t.task_no
        WHERE ts.member_id = #{member_id}
        AND t.task_no = #{task_no}
        AND ts.task_state = '제출완료'
        ]]>
    </select>

    <!--제출된 숙제 상세 조회-->
    <select id="evalTaskDetail" parameterType="Integer" resultType="TaskDTO">
        <![CDATA[
        SELECT sub.tasksubmit_no, sub.tasksubmit_chapter, sub.tasksubmit_content,
                      sub.tasksubmit_add, sub.tasksubmit_regdate, m.member_name,
                      ts.member_id, ts.member_no, ts.group_no, ts.tasksend_no, t.task_chapter

        FROM tasksubmit AS sub
        JOIN member AS m ON sub.member_id = m.member_id
        JOIN tasksend AS ts ON sub.tasksend_no = ts.tasksend_no
        JOIN studygroup AS sg ON ts.group_no = sg.group_no
        JOIN task AS t ON ts.task_no = t.task_no
        WHERE sub.tasksubmit_no = #{tasksubmit_no}
        ]]>
    </select>

    <!--숙제 평가-->
    <update id="insertEvaluation" parameterType="TaskDTO">
        <![CDATA[
        UPDATE tasksend AS ts
        INNER JOIN tasksubmit AS sub ON ts.tasksend_no = sub.tasksend_no
        SET ts.task_state = '평가완료', sub.tasksubmit_comment = #{tasksubmit_comment}, sub.tasksubmit_eval = #{tasksubmit_eval}
        WHERE ts.tasksend_no = #{tasksend_no}
        ]]>
    </update>

    <!--학생 레벨 업데이트-->
    <update id="updateMemberLevel" parameterType="GroupDTO">
        <![CDATA[
        UPDATE groupmember
        SET member_level = #{member_level}
        WHERE group_no = #{group_no} AND member_no = #{member_no}
        ]]>
    </update>

    <!--수강생 숙제 관련 쿼리문//////////////////////////////////////////////////-->
    <!--전송된 숙제 조회-->
    <select id="selectTaskById" parameterType="Integer" resultType="TaskDTO">
        <![CDATA[
        SELECT ts.tasksend_no, t.task_no, t.task_title, t.task_content, t.task_chapter, t.task_deadline, ts.task_state, m.member_name, g.game_title
        FROM tasksend AS ts
        JOIN task AS t
        ON ts.task_no = t.task_no
        JOIN  member AS m
        ON ts.member_id = m.member_id
        JOIN studygroup AS sg
        ON ts.group_no = sg.group_no
        JOIN game AS g ON sg.game_no = g.game_no
        WHERE ts.member_no = #{member_no}
        AND (ts.task_state = '미작성' OR ts.task_state = '작성중')
        AND t.task_deadline >= CURDATE()
        ORDER BY t.task_regdate DESC
        ]]>
    </select>

    <!-- 숙제 번호로 정보 조회 -->
    <select id="selectTaskByNo" parameterType="Integer" resultType="TaskDTO">
        <![CDATA[
        SELECT ts.tasksend_no, t.task_no, t.task_title, t.task_content, t.task_chapter, t.task_deadline, ts.task_state, m.member_name, g.game_title
        FROM tasksend AS ts
        JOIN task AS t ON ts.task_no = t.task_no
        JOIN member AS m ON ts.member_id = m.member_id
        JOIN studygroup AS sg ON ts.group_no = sg.group_no
        JOIN game AS g ON sg.game_no = g.game_no
        WHERE ts.tasksend_no = #{tasksend_no}
        ]]>
    </select>

    <!--숙제 작성하기-->
    <insert id="wirteTask" parameterType="TaskDTO">
        <![CDATA[
        INSERT INTO tasksubmit (tasksubmit_chapter, tasksubmit_content, tasksubmit_add, tasksubmit_regdate, tasksend_no, task_no, member_id)
        VALUES (#{tasksubmit_chapter}, #{tasksubmit_content}, #{tasksubmit_add}, now(), #{tasksend_no}, #{task_no}, #{member_id})
        ]]>
    </insert>

    <!--숙제 수정페이지-->
    <select id="modifyTask" parameterType="Integer" resultType="TaskDTO">
        <![CDATA[
        SELECT t.task_title, t.task_chapter, t.task_content, t.task_deadline, ts.task_state, m.member_name, ts.member_no, g.game_title, sub.*
        FROM tasksend AS ts
        JOIN task AS t
        ON ts.task_no = t.task_no
        JOIN tasksubmit AS sub
        ON ts.tasksend_no = sub.tasksend_no
        JOIN  member AS m
        ON ts.member_id = m.member_id
        JOIN studygroup AS sg
        ON ts.group_no = sg.group_no
        JOIN game AS g ON sg.game_no = g.game_no
        WHERE ts.tasksend_no = #{tasksend_no}
        ]]>
    </select>

    <!--작성 숙제 수정하기-->
    <update id="ModifySubmitTask" parameterType="TaskDTO">
        <![CDATA[
        UPDATE tasksubmit
        SET tasksubmit_chapter = #{tasksubmit_chapter}, tasksubmit_content = #{tasksubmit_content}, tasksubmit_add = #{tasksubmit_add}
        WHERE tasksend_no = #{tasksend_no}
        ]]>
    </update>

    <!--작성 숙제 저장-->
    <update id="saveTask" parameterType="Integer">
        <![CDATA[
        UPDATE tasksend SET task_state = '작성중'
        WHERE tasksend_no = #{tasksend_no}
        ]]>
    </update>

    <!--숙제 제출-->
    <update id="submitTask" parameterType="java.util.List">
        <![CDATA[
        UPDATE tasksend AS ts
        JOIN tasksubmit sub ON ts.tasksend_no = sub.tasksend_no
        SET ts.task_state = '제출완료', sub.tasksubmit_regdate = CURDATE()
        WHERE ts.tasksend_no IN
        ]]>
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--제출 숙제 조회하기-->
    <select id="selectSubmitTask" parameterType="TaskDTO" resultType="TaskDTO">
        <![CDATA[
        SELECT t.task_title, t.task_content, t.task_deadline, t.task_chapter, ts.task_state, ts.tasksend_no, m.member_name, ts.member_no, g.game_title
        FROM tasksend AS ts
        JOIN task AS t
        ON ts.task_no = t.task_no
        JOIN  member AS m
        ON ts.member_id = m.member_id
        JOIN studygroup AS sg
        ON ts.group_no = sg.group_no
        JOIN game AS g ON sg.game_no = g.game_no
        WHERE ts.member_no = #{member_no}
        AND (ts.task_state = '제출완료' OR ts.task_state = '평가완료')
        LIMIT #{LIMIT} OFFSET #{OFFSET}
        ]]>
    </select>

    <!--제출 숙제 갯수-->
    <select id="submitTaskCount" parameterType="Integer" resultType="Integer">
        <![CDATA[
        SELECT COUNT(*)
        FROM tasksend
        WHERE member_no = #{member_no}
        AND (task_state = '제출완료' OR task_state = '평가완료')
        ]]>
    </select>

    <!--평가 완료된 숙제 조회-->
    <select id="selectSubmitTaskByNo" parameterType="Integer" resultType="TaskDTO">
        <![CDATA[
        SELECT ts.tasksend_no, t.task_no, t.task_title, t.task_content, t.task_chapter, t.task_deadline, ts.task_state, m.member_name, g.game_title, sub.*
        FROM tasksend AS ts
        JOIN task AS t ON ts.task_no = t.task_no
        JOIN tasksubmit AS sub ON ts.tasksend_no = sub.tasksend_no
        JOIN member AS m ON ts.member_id = m.member_id
        JOIN studygroup AS sg ON ts.group_no = sg.group_no
        JOIN game AS g ON sg.game_no = g.game_no
        WHERE ts.tasksend_no = #{tasksend_no}
        ]]>
    </select>

</mapper>